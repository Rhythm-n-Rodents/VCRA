set_env;
DataManager = FileManager;
dataset_name = 'WholeBrain';
stack_list = {'ML_2018_08_15', 'ML20190124', 'ML20200201'};
skl_grid_name = '240_cube_rec';
output_graph_grid_name = sprintf('%s_analyzed', skl_grid_name);
grid_version = '240_cube';
% min_r_um = 1;
% save_folder_name = sprintf('whole_brain_stat_min_r_%d', min_r_um * 1e3);
save_folder_name = 'whole_brain_stat';
% saved_stat_folder_name = 'whole_brain_stat_v2_sc';
% reconstruction_version = '240_cube_recon_v2_sc';
stack_graph_cell = cell(size(stack_list));
capillary_max_radius_um = 3.5;
capillary_min_radius_um = 1; % After calibration

warning('The result generated by the following script need to be corrected for brain shrinkage');
%%
for iter_stack = 1 : numel(stack_list)
    stack = stack_list{iter_stack};
    grid_info = DataManager.load_grid(dataset_name, stack, grid_version);
    % Load all the skeleton to form a graph
    fprintf('Load whole brain vessel skeleton\n');
    tic
    wb_skel_str = fun_analysis_get_whole_brain_grid_skel(dataset_name, stack, grid_info, skl_grid_name);
    toc   
    fprintf('Load whole brain mask (including sagittal sinus)\n');
    %%
    whole_brain_skel_ind = cat(1, wb_skel_str.ind{:});
    whole_brain_skel_r = cat(1, wb_skel_str.r{:});
    assert(numel(whole_brain_skel_ind) == numel(whole_brain_skel_r));
    [whole_brain_skel_ind_unique, unique_idx, ~] = unique(whole_brain_skel_ind);
    whole_brain_skel_r_unique = whole_brain_skel_r(unique_idx);
    
    % Takes 1400 seconds for conversion
    tic
    vessel_graph = fun_skeleton_to_graph(whole_brain_skel_ind_unique, grid_info.data_size);
    toc
    skel_r_sparse = sparse(whole_brain_skel_ind_unique, ones(size(whole_brain_skel_ind_unique)), double(whole_brain_skel_r_unique), vessel_graph.num.block_voxel, 1);
    vessel_graph = fun_graph_add_radius(vessel_graph, skel_r_sparse, 0);
    [vessel_graph, stat_str] = fun_analysis_whole_brain_graph_statistics(vessel_graph, ...
        dataset_name, stack, capillary_max_radius_um, capillary_min_radius_um, save_folder_name);
    stat_str.skel_version = skl_grid_name;
    xml_write(stat_str.fp, stat_str);
    save(strrep(stat_str.fp, 'xml', 'mat'), '-struct', 'stat_str');    
    vessel_graph.stat_data = stat_str;
    stack_graph_cell{iter_stack} = vessel_graph;
    save(strrep(stat_str.fp, '_stat_db.xml', '_graph.mat'), '-struct', 'vessel_graph', '-v7.3');
end
