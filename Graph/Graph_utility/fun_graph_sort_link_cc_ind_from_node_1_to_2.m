function vessel_graph = fun_graph_sort_link_cc_ind_from_node_1_to_2(vessel_graph)
% fun_graph_sort_link_cc_ind_from_node_1_to_2 sorts the link cc ind to
% start from the first node to the second node
% Input: 
%   vessel_graph: structure, generated by fun_skeleton_to_graph
% Output: 
%   vessel_graph: structure, with the order of the link cc ind updated. 
%
% Implemented by Xiang Ji on 07/24/2019

for iter_link = 1 : vessel_graph.link.num_cc
    tmp_cc = vessel_graph.link.cc_ind{iter_link};
    if numel(tmp_cc) == 1
        continue;
    end
    tmp_node_label = vessel_graph.link.connected_node_label(iter_link, :);
    if tmp_node_label(1) ~= tmp_node_label(2)
        % Not self-loop nor link with two endpoints
        assert(tmp_node_label(1) ~= 0, 'The first node is 0');
        % Use the first node
        tmp_node_1 = tmp_node_label(1);
        tmp_node_1_ind = vessel_graph.node.cc_ind{tmp_node_1};
        tmp_node_1_neighbors = fun_graph_get_node_neighbor_voxel_ind(...
            tmp_node_1_ind, vessel_graph.num.mask_size, 26);
        tmp_n1_to_1_Q = any(tmp_node_1_neighbors == tmp_cc(1));
        tmp_n1_to_end_Q = any(tmp_node_1_neighbors == tmp_cc(end));
        if ~tmp_n1_to_1_Q && tmp_n1_to_end_Q
            tmp_cc = flip(tmp_cc);
            vessel_graph.link.cc_ind{iter_link} = flip(tmp_cc);
        end
    end
end
end