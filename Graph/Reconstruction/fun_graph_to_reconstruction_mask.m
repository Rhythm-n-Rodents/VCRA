function recon_mask = fun_graph_to_reconstruction_mask(vessel_graph, labeled_mask_Q, recon_max_error_rate, priority_label)
% fun_graph_to_reconstruction_mask reconstructes the vessel mask from the
% vessel_graph. 
% Input: 
%   vessel_graph: structure generated by fun_skeleton_to_graph, with extra
%   field added by fun_graph_add_radius
%   labeled_mask_Q: logical scalar. If true, recon_mask would be a labeled
%   array, with positive link labels and negative node labels. 
%   recon_max_error_rate: numerical scalar between 0 and 1, control the
%   precision of the reconstruction. 
% Output: 
%   recon_mask: 3D numerical/logical array, whose nonzero voxels represent
%   the reconstructed vessel voxels
%
% Implemented by Xiang Ji on 12/18/2019
if nargin < 3
    recon_max_error_rate = 0;
    priority_label = 'none';
elseif nargin < 4
    priority_label = 'none';
end
image_size = vessel_graph.num.mask_size;
if labeled_mask_Q && strcmp(priority_label, 'link')
    % Reconstruct the node first. Overwrite the node voxel if it overlaps
    % with the link voxels 
    recon_r_node = fun_graph_get_cc_radius(vessel_graph.node.cc_ind, vessel_graph.radius, 'all');
    recon_node_mask = fun_skeleton_reconstruction_label_aprox(vessel_graph.node.pos_ind, ...
        recon_r_node, - vessel_graph.node.label, image_size, recon_max_error_rate);
    recon_r_link = fun_graph_get_cc_radius(vessel_graph.link.cc_ind, vessel_graph.radius, 'all');
    recon_mask = fun_skeleton_reconstruction_label_aprox(...
        vessel_graph.link.pos_ind, recon_r_link, vessel_graph.link.label, ...
        image_size, recon_max_error_rate);
    tmp_replace_Q = (recon_mask == 0);
    recon_mask(tmp_replace_Q) = recon_node_mask(tmp_replace_Q);
else    
    recon_cc = cat(1, vessel_graph.link.cc_ind, vessel_graph.node.cc_ind);
    recon_r = fun_graph_get_cc_radius(recon_cc, vessel_graph.radius, 'all');
    recon_ind = cat(1, vessel_graph.link.pos_ind, vessel_graph.node.pos_ind);
    if labeled_mask_Q
        recon_label = cat(1, vessel_graph.link.label, -vessel_graph.node.label);
        recon_mask = fun_skeleton_reconstruction_label_aprox(recon_ind, recon_r, recon_label, image_size, recon_max_error_rate);
    else
        recon_mask = fun_skeleton_reconstruction_aprox(recon_ind, recon_r, image_size, recon_max_error_rate);
    end
end

end